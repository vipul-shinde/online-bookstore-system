# Generated by Django 3.2.4 on 2021-07-22 08:50

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django_cryptography.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('email', models.EmailField(max_length=50, primary_key=True, serialize=False, unique=True)),
                ('receive_promotions', models.BooleanField(default=False)),
                ('phone', models.CharField(blank=True, max_length=11, null=True)),
                ('street', models.CharField(blank=True, max_length=100, null=True)),
                ('city', models.CharField(blank=True, max_length=20, null=True)),
                ('state', models.CharField(blank=True, max_length=20, null=True)),
                ('zip_code', models.CharField(blank=True, max_length=5, null=True)),
                ('county', models.CharField(blank=True, max_length=10, null=True)),
                ('country', models.CharField(blank=True, max_length=10, null=True)),
                ('card_count', models.IntegerField(default=0)),
                ('card_name1', django_cryptography.fields.encrypt(models.CharField(blank=True, max_length=100, null=True))),
                ('card_num1', django_cryptography.fields.encrypt(models.CharField(blank=True, max_length=16, null=True))),
                ('card_exp1', django_cryptography.fields.encrypt(models.CharField(blank=True, max_length=5, null=True))),
                ('card_cvv1', django_cryptography.fields.encrypt(models.CharField(blank=True, max_length=3, null=True))),
                ('card_four1', models.CharField(blank=True, default='', max_length=4)),
                ('card_name2', django_cryptography.fields.encrypt(models.CharField(blank=True, max_length=100, null=True))),
                ('card_num2', django_cryptography.fields.encrypt(models.CharField(blank=True, max_length=16, null=True))),
                ('card_exp2', django_cryptography.fields.encrypt(models.CharField(blank=True, max_length=5, null=True))),
                ('card_cvv2', django_cryptography.fields.encrypt(models.CharField(blank=True, max_length=3, null=True))),
                ('card_four2', models.CharField(blank=True, default='', max_length=4)),
                ('card_name3', django_cryptography.fields.encrypt(models.CharField(blank=True, max_length=100, null=True))),
                ('card_num3', django_cryptography.fields.encrypt(models.CharField(blank=True, max_length=16, null=True))),
                ('card_exp3', django_cryptography.fields.encrypt(models.CharField(blank=True, max_length=5, null=True))),
                ('card_cvv3', django_cryptography.fields.encrypt(models.CharField(blank=True, max_length=3, null=True))),
                ('card_four3', models.CharField(blank=True, default='', max_length=4)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=False)),
                ('is_suspended', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('isbn', models.CharField(max_length=13, primary_key=True, serialize=False, unique=True)),
                ('category', models.CharField(max_length=30)),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('image_path', models.CharField(max_length=30)),
                ('edition', models.IntegerField()),
                ('publisher', models.CharField(max_length=30)),
                ('publication_year', models.CharField(max_length=4)),
                ('author', models.CharField(max_length=30)),
                ('stock', models.IntegerField()),
                ('cost', models.DecimalField(decimal_places=2, max_digits=4)),
                ('rating', models.IntegerField(default=2)),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, editable=False, max_length=10, primary_key=True, serialize=False, unique=True)),
                ('status', models.CharField(default='Confirmed', max_length=20)),
                ('total', models.DecimalField(decimal_places=2, max_digits=5)),
                ('date', models.DateField()),
                ('time', models.TimeField()),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('phone', models.CharField(max_length=11)),
                ('street', models.CharField(max_length=100)),
                ('city', models.CharField(max_length=20)),
                ('state', models.CharField(max_length=20)),
                ('zip_code', models.CharField(max_length=5)),
                ('county', models.CharField(max_length=10)),
                ('country', models.CharField(max_length=10)),
                ('card_name', django_cryptography.fields.encrypt(models.CharField(max_length=100))),
                ('card_num', django_cryptography.fields.encrypt(models.CharField(max_length=16))),
                ('card_exp', django_cryptography.fields.encrypt(models.CharField(max_length=5))),
                ('card_cvv', django_cryptography.fields.encrypt(models.CharField(max_length=3))),
                ('card_four', models.CharField(max_length=4)),
            ],
        ),
        migrations.CreateModel(
            name='Promotion',
            fields=[
                ('code', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('percentage', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)])),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('quantity', models.IntegerField()),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bookstore.book')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bookstore.order')),
            ],
        ),
        migrations.AddField(
            model_name='order',
            name='promotion',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='bookstore.promotion'),
        ),
        migrations.AddField(
            model_name='order',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='CartItem',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('quantity', models.IntegerField()),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bookstore.book')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
